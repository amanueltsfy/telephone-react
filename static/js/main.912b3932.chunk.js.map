{"version":3,"sources":["components/Header.jsx","data/index.js","components/TablePaginationActions.jsx","components/ContentTable.jsx","components/Content.jsx","App.js","index.js"],"names":["Header","AppBar","position","Toolbar","IconButton","size","edge","color","sx","mr","Message","Typography","variant","width","className","countries","name","code","gateways","gateway","country","costPerDedicatedNumber","costPerOutboundSMS","volume","marks","value","label","TablePaginationActions","count","page","rowsPerPage","onPageChange","theme","useTheme","Box","flexShrink","ml","onClick","event","disabled","direction","Math","ceil","max","propTypes","PropTypes","number","isRequired","func","ContentTable","data","selectedSmsCount","selectedDedicatedNumberCount","useState","setPage","setRowsPerPage","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","length","TableBody","slice","map","row","index","scope","toFixed","toLocaleString","parseInt","total","TableFooter","TablePagination","rowsPerPageOptions","colSpan","SelectProps","inputProps","native","newPage","onRowsPerPageChange","target","ActionsComponent","groupBy","require","_","Content","setData","setSelectedSmsCount","setSelectedDedicatedNumberCount","setCountry","useEffect","axios","get","then","response","country_name","catch","error","groupedData","groupedDataToArray","push","gatewayData","flatMap","biggestVolume","gatewayCostRecordToUse","gatewayCostRecord","orderBy","filter","item","includes","handlePriceChange","Container","Grid","container","justifyContent","spacing","xs","md","Autocomplete","id","options","autoHighlight","onChange","getOptionLabel","option","renderOption","props","loading","src","toLowerCase","srcSet","alt","renderInput","params","TextField","Slider","getAriaValueText","step","min","valueLabelDisplay","gutterBottom","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.912b3932.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Toolbar, AppBar, IconButton, Typography } from '@mui/material'\r\nimport { Message } from '@mui/icons-material'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton\r\n                    size=\"large\"\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"menu\"\r\n                    sx={{ mr: 2 }}\r\n                >\r\n                    <Message />\r\n                </IconButton>\r\n                <Typography variant='h6' width='100%' className='center'>\r\n                    SMS Gateway comparison\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","export const countries = [ \r\n    {name: 'Afghanistan', code: 'AF'}, \r\n    {name: 'Åland Islands', code: 'AX'}, \r\n    {name: 'Albania', code: 'AL'}, \r\n    {name: 'Algeria', code: 'DZ'}, \r\n    {name: 'American Samoa', code: 'AS'}, \r\n    {name: 'AndorrA', code: 'AD'}, \r\n    {name: 'Angola', code: 'AO'}, \r\n    {name: 'Anguilla', code: 'AI'}, \r\n    {name: 'Antarctica', code: 'AQ'}, \r\n    {name: 'Antigua and Barbuda', code: 'AG'}, \r\n    {name: 'Argentina', code: 'AR'}, \r\n    {name: 'Armenia', code: 'AM'}, \r\n    {name: 'Aruba', code: 'AW'}, \r\n    {name: 'Australia', code: 'AU'}, \r\n    {name: 'Austria', code: 'AT'}, \r\n    {name: 'Azerbaijan', code: 'AZ'}, \r\n    {name: 'Bahamas', code: 'BS'}, \r\n    {name: 'Bahrain', code: 'BH'}, \r\n    {name: 'Bangladesh', code: 'BD'}, \r\n    {name: 'Barbados', code: 'BB'}, \r\n    {name: 'Belarus', code: 'BY'}, \r\n    {name: 'Belgium', code: 'BE'}, \r\n    {name: 'Belize', code: 'BZ'}, \r\n    {name: 'Benin', code: 'BJ'}, \r\n    {name: 'Bermuda', code: 'BM'}, \r\n    {name: 'Bhutan', code: 'BT'}, \r\n    {name: 'Bolivia', code: 'BO'}, \r\n    {name: 'Bosnia and Herzegovina', code: 'BA'}, \r\n    {name: 'Botswana', code: 'BW'}, \r\n    {name: 'Bouvet Island', code: 'BV'}, \r\n    {name: 'Brazil', code: 'BR'}, \r\n    {name: 'British Indian Ocean Territory', code: 'IO'}, \r\n    {name: 'Brunei Darussalam', code: 'BN'}, \r\n    {name: 'Bulgaria', code: 'BG'}, \r\n    {name: 'Burkina Faso', code: 'BF'}, \r\n    {name: 'Burundi', code: 'BI'}, \r\n    {name: 'Cambodia', code: 'KH'}, \r\n    {name: 'Cameroon', code: 'CM'}, \r\n    {name: 'Canada', code: 'CA'}, \r\n    {name: 'Cape Verde', code: 'CV'}, \r\n    {name: 'Cayman Islands', code: 'KY'}, \r\n    {name: 'Central African Republic', code: 'CF'}, \r\n    {name: 'Chad', code: 'TD'}, \r\n    {name: 'Chile', code: 'CL'}, \r\n    {name: 'China', code: 'CN'}, \r\n    {name: 'Christmas Island', code: 'CX'}, \r\n    {name: 'Cocos (Keeling) Islands', code: 'CC'}, \r\n    {name: 'Colombia', code: 'CO'}, \r\n    {name: 'Comoros', code: 'KM'}, \r\n    {name: 'Congo', code: 'CG'}, \r\n    {name: 'Congo, The Democratic Republic of the', code: 'CD'}, \r\n    {name: 'Cook Islands', code: 'CK'}, \r\n    {name: 'Costa Rica', code: 'CR'}, \r\n    {name: 'Cote D\\'Ivoire', code: 'CI'}, \r\n    {name: 'Croatia', code: 'HR'}, \r\n    {name: 'Cuba', code: 'CU'}, \r\n    {name: 'Cyprus', code: 'CY'}, \r\n    {name: 'Czech Republic', code: 'CZ'}, \r\n    {name: 'Denmark', code: 'DK'}, \r\n    {name: 'Djibouti', code: 'DJ'}, \r\n    {name: 'Dominica', code: 'DM'}, \r\n    {name: 'Dominican Republic', code: 'DO'}, \r\n    {name: 'Ecuador', code: 'EC'}, \r\n    {name: 'Egypt', code: 'EG'}, \r\n    {name: 'El Salvador', code: 'SV'}, \r\n    {name: 'Equatorial Guinea', code: 'GQ'}, \r\n    {name: 'Eritrea', code: 'ER'}, \r\n    {name: 'Estonia', code: 'EE'}, \r\n    {name: 'Ethiopia', code: 'ET'}, \r\n    {name: 'Falkland Islands (Malvinas)', code: 'FK'}, \r\n    {name: 'Faroe Islands', code: 'FO'}, \r\n    {name: 'Fiji', code: 'FJ'}, \r\n    {name: 'Finland', code: 'FI'}, \r\n    {name: 'France', code: 'FR'}, \r\n    {name: 'French Guiana', code: 'GF'}, \r\n    {name: 'French Polynesia', code: 'PF'}, \r\n    {name: 'French Southern Territories', code: 'TF'}, \r\n    {name: 'Gabon', code: 'GA'}, \r\n    {name: 'Gambia', code: 'GM'}, \r\n    {name: 'Georgia', code: 'GE'}, \r\n    {name: 'Germany', code: 'DE'}, \r\n    {name: 'Ghana', code: 'GH'}, \r\n    {name: 'Gibraltar', code: 'GI'}, \r\n    {name: 'Greece', code: 'GR'}, \r\n    {name: 'Greenland', code: 'GL'}, \r\n    {name: 'Grenada', code: 'GD'}, \r\n    {name: 'Guadeloupe', code: 'GP'}, \r\n    {name: 'Guam', code: 'GU'}, \r\n    {name: 'Guatemala', code: 'GT'}, \r\n    {name: 'Guernsey', code: 'GG'}, \r\n    {name: 'Guinea', code: 'GN'}, \r\n    {name: 'Guinea-Bissau', code: 'GW'}, \r\n    {name: 'Guyana', code: 'GY'}, \r\n    {name: 'Haiti', code: 'HT'}, \r\n    {name: 'Heard Island and Mcdonald Islands', code: 'HM'}, \r\n    {name: 'Holy See (Vatican City State)', code: 'VA'}, \r\n    {name: 'Honduras', code: 'HN'}, \r\n    {name: 'Hong Kong', code: 'HK'}, \r\n    {name: 'Hungary', code: 'HU'}, \r\n    {name: 'Iceland', code: 'IS'}, \r\n    {name: 'India', code: 'IN'}, \r\n    {name: 'Indonesia', code: 'ID'}, \r\n    {name: 'Iran, Islamic Republic Of', code: 'IR'}, \r\n    {name: 'Iraq', code: 'IQ'}, \r\n    {name: 'Ireland', code: 'IE'}, \r\n    {name: 'Isle of Man', code: 'IM'}, \r\n    {name: 'Israel', code: 'IL'}, \r\n    {name: 'Italy', code: 'IT'}, \r\n    {name: 'Jamaica', code: 'JM'}, \r\n    {name: 'Japan', code: 'JP'}, \r\n    {name: 'Jersey', code: 'JE'}, \r\n    {name: 'Jordan', code: 'JO'}, \r\n    {name: 'Kazakhstan', code: 'KZ'}, \r\n    {name: 'Kenya', code: 'KE'}, \r\n    {name: 'Kiribati', code: 'KI'}, \r\n    {name: 'Korea, Democratic People\\'S Republic of', code: 'KP'}, \r\n    {name: 'Korea, Republic of', code: 'KR'}, \r\n    {name: 'Kuwait', code: 'KW'}, \r\n    {name: 'Kyrgyzstan', code: 'KG'}, \r\n    {name: 'Lao People\\'S Democratic Republic', code: 'LA'}, \r\n    {name: 'Latvia', code: 'LV'}, \r\n    {name: 'Lebanon', code: 'LB'}, \r\n    {name: 'Lesotho', code: 'LS'}, \r\n    {name: 'Liberia', code: 'LR'}, \r\n    {name: 'Libyan Arab Jamahiriya', code: 'LY'}, \r\n    {name: 'Liechtenstein', code: 'LI'}, \r\n    {name: 'Lithuania', code: 'LT'}, \r\n    {name: 'Luxembourg', code: 'LU'}, \r\n    {name: 'Macao', code: 'MO'}, \r\n    {name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK'}, \r\n    {name: 'Madagascar', code: 'MG'}, \r\n    {name: 'Malawi', code: 'MW'}, \r\n    {name: 'Malaysia', code: 'MY'}, \r\n    {name: 'Maldives', code: 'MV'}, \r\n    {name: 'Mali', code: 'ML'}, \r\n    {name: 'Malta', code: 'MT'}, \r\n    {name: 'Marshall Islands', code: 'MH'}, \r\n    {name: 'Martinique', code: 'MQ'}, \r\n    {name: 'Mauritania', code: 'MR'}, \r\n    {name: 'Mauritius', code: 'MU'}, \r\n    {name: 'Mayotte', code: 'YT'}, \r\n    {name: 'Mexico', code: 'MX'}, \r\n    {name: 'Micronesia, Federated States of', code: 'FM'}, \r\n    {name: 'Moldova, Republic of', code: 'MD'}, \r\n    {name: 'Monaco', code: 'MC'}, \r\n    {name: 'Mongolia', code: 'MN'}, \r\n    {name: 'Montserrat', code: 'MS'}, \r\n    {name: 'Morocco', code: 'MA'}, \r\n    {name: 'Mozambique', code: 'MZ'}, \r\n    {name: 'Myanmar', code: 'MM'}, \r\n    {name: 'Namibia', code: 'NA'}, \r\n    {name: 'Nauru', code: 'NR'}, \r\n    {name: 'Nepal', code: 'NP'}, \r\n    {name: 'Netherlands', code: 'NL'}, \r\n    {name: 'Netherlands Antilles', code: 'AN'}, \r\n    {name: 'New Caledonia', code: 'NC'}, \r\n    {name: 'New Zealand', code: 'NZ'}, \r\n    {name: 'Nicaragua', code: 'NI'}, \r\n    {name: 'Niger', code: 'NE'}, \r\n    {name: 'Nigeria', code: 'NG'}, \r\n    {name: 'Niue', code: 'NU'}, \r\n    {name: 'Norfolk Island', code: 'NF'}, \r\n    {name: 'Northern Mariana Islands', code: 'MP'}, \r\n    {name: 'Norway', code: 'NO'}, \r\n    {name: 'Oman', code: 'OM'}, \r\n    {name: 'Pakistan', code: 'PK'}, \r\n    {name: 'Palau', code: 'PW'}, \r\n    {name: 'Palestinian Territory, Occupied', code: 'PS'}, \r\n    {name: 'Panama', code: 'PA'}, \r\n    {name: 'Papua New Guinea', code: 'PG'}, \r\n    {name: 'Paraguay', code: 'PY'}, \r\n    {name: 'Peru', code: 'PE'}, \r\n    {name: 'Philippines', code: 'PH'}, \r\n    {name: 'Pitcairn', code: 'PN'}, \r\n    {name: 'Poland', code: 'PL'}, \r\n    {name: 'Portugal', code: 'PT'}, \r\n    {name: 'Puerto Rico', code: 'PR'}, \r\n    {name: 'Qatar', code: 'QA'}, \r\n    {name: 'Reunion', code: 'RE'}, \r\n    {name: 'Romania', code: 'RO'}, \r\n    {name: 'Russian Federation', code: 'RU'}, \r\n    {name: 'RWANDA', code: 'RW'}, \r\n    {name: 'Saint Helena', code: 'SH'}, \r\n    {name: 'Saint Kitts and Nevis', code: 'KN'}, \r\n    {name: 'Saint Lucia', code: 'LC'}, \r\n    {name: 'Saint Pierre and Miquelon', code: 'PM'}, \r\n    {name: 'Saint Vincent and the Grenadines', code: 'VC'}, \r\n    {name: 'Samoa', code: 'WS'}, \r\n    {name: 'San Marino', code: 'SM'}, \r\n    {name: 'Sao Tome and Principe', code: 'ST'}, \r\n    {name: 'Saudi Arabia', code: 'SA'}, \r\n    {name: 'Senegal', code: 'SN'}, \r\n    {name: 'Serbia and Montenegro', code: 'CS'}, \r\n    {name: 'Seychelles', code: 'SC'}, \r\n    {name: 'Sierra Leone', code: 'SL'}, \r\n    {name: 'Singapore', code: 'SG'}, \r\n    {name: 'Slovakia', code: 'SK'}, \r\n    {name: 'Slovenia', code: 'SI'}, \r\n    {name: 'Solomon Islands', code: 'SB'}, \r\n    {name: 'Somalia', code: 'SO'}, \r\n    {name: 'South Africa', code: 'ZA'}, \r\n    {name: 'South Georgia and the South Sandwich Islands', code: 'GS'}, \r\n    {name: 'Spain', code: 'ES'}, \r\n    {name: 'Sri Lanka', code: 'LK'}, \r\n    {name: 'Sudan', code: 'SD'}, \r\n    {name: 'Suriname', code: 'SR'}, \r\n    {name: 'Svalbard and Jan Mayen', code: 'SJ'}, \r\n    {name: 'Swaziland', code: 'SZ'}, \r\n    {name: 'Sweden', code: 'SE'}, \r\n    {name: 'Switzerland', code: 'CH'}, \r\n    {name: 'Syrian Arab Republic', code: 'SY'}, \r\n    {name: 'Taiwan, Province of China', code: 'TW'}, \r\n    {name: 'Tajikistan', code: 'TJ'}, \r\n    {name: 'Tanzania, United Republic of', code: 'TZ'}, \r\n    {name: 'Thailand', code: 'TH'}, \r\n    {name: 'Timor-Leste', code: 'TL'}, \r\n    {name: 'Togo', code: 'TG'}, \r\n    {name: 'Tokelau', code: 'TK'}, \r\n    {name: 'Tonga', code: 'TO'}, \r\n    {name: 'Trinidad and Tobago', code: 'TT'}, \r\n    {name: 'Tunisia', code: 'TN'}, \r\n    {name: 'Turkey', code: 'TR'}, \r\n    {name: 'Turkmenistan', code: 'TM'}, \r\n    {name: 'Turks and Caicos Islands', code: 'TC'}, \r\n    {name: 'Tuvalu', code: 'TV'}, \r\n    {name: 'Uganda', code: 'UG'}, \r\n    {name: 'Ukraine', code: 'UA'}, \r\n    {name: 'United Arab Emirates', code: 'AE'}, \r\n    {name: 'United Kingdom', code: 'GB'}, \r\n    {name: 'United States America', code: 'USA'}, \r\n    {name: 'United States Minor Outlying Islands', code: 'UM'}, \r\n    {name: 'Uruguay', code: 'UY'}, \r\n    {name: 'Uzbekistan', code: 'UZ'}, \r\n    {name: 'Vanuatu', code: 'VU'}, \r\n    {name: 'Venezuela', code: 'VE'}, \r\n    {name: 'Viet Nam', code: 'VN'}, \r\n    {name: 'Virgin Islands, British', code: 'VG'}, \r\n    {name: 'Virgin Islands, U.S.', code: 'VI'}, \r\n    {name: 'Wallis and Futuna', code: 'WF'}, \r\n    {name: 'Western Sahara', code: 'EH'}, \r\n    {name: 'Yemen', code: 'YE'}, \r\n    {name: 'Zambia', code: 'ZM'}, \r\n    {name: 'Zimbabwe', code: 'ZW'} \r\n  ]\r\n\r\nexport const gateways = [\r\n  {gateway:'Message Bird',country:'Argentina',code:'',costPerDedicatedNumber:'',costPerOutboundSMS:'0.08',volume:150},\r\n  {gateway:'Message Bird',country:'Australia',code:'',costPerDedicatedNumber:'11',costPerOutboundSMS:'0.06',volume:50},\r\n  {gateway:'Message Bird',country:'Argentina',code:'',costPerDedicatedNumber:'22',costPerOutboundSMS:'0.03',volume:200},\r\n  {gateway:'Message Bird',country:'Argentina',code:'',costPerDedicatedNumber:'10',costPerOutboundSMS:'0.02',volume:600},\r\n  {gateway:'Vonage',country:'Australia',code:'',costPerDedicatedNumber:'12',costPerOutboundSMS:'0.0481',volume:0},\r\n  {gateway:'Vonage',country:'Australia',code:'',costPerDedicatedNumber:'1',costPerOutboundSMS:'0.0059',volume:0},\r\n  {gateway:'Vonage',country:'Australia',code:'',costPerDedicatedNumber:'10',costPerOutboundSMS:'0.04',volume:0},\r\n  {gateway:'Clickatell',country:'Mexico',code:'',costPerDedicatedNumber:'43.33',costPerOutboundSMS:'1.30',volume:0},\r\n  {gateway:'Plivo',country:'Brazil',code:'',costPerDedicatedNumber:'6.17',costPerOutboundSMS:'0.04',volume:0},\r\n  {gateway:'MessageMedia USA Inc',country:'USA',code:'',costPerDedicatedNumber:'35',costPerOutboundSMS:'0.9',volume:0},\r\n  {gateway:'MessageMedia USA Inc',country:'USA',code:'',costPerDedicatedNumber:'35',costPerOutboundSMS:'0.5',volume:167},\r\n  {gateway:'MessageMedia USA Inc',country:'Australia',code:'',costPerDedicatedNumber:'34',costPerOutboundSMS:'0.14',volume:1500},\r\n  {gateway:'MessageMedia USA Inc',country:'USA',code:'',costPerDedicatedNumber:'34',costPerOutboundSMS:'0.1',volume:2500},\r\n  {gateway:'Vonage',country:'Ethiopia',code:'ET',costPerDedicatedNumber:'1',costPerOutboundSMS:'0.0059',volume:0},\r\n]\r\n\r\nexport const marks = [\r\n  {\r\n    value: 1,\r\n    label: '1',\r\n  },\r\n  {\r\n    value: 2,\r\n    label: '2',\r\n  },\r\n  {\r\n    value: 3,\r\n    label: '3',\r\n  },\r\n  {\r\n    value: 4,\r\n    label: '4',\r\n  },\r\n  {\r\n    value: 5,\r\n    label: '5',\r\n  },\r\n  {\r\n    value: 6,\r\n    label: '6',\r\n  },\r\n  {\r\n    value: 7,\r\n    label: '7',\r\n  },\r\n  {\r\n    value: 8,\r\n    label: '8',\r\n  },\r\n  {\r\n    value: 9,\r\n    label: '9',\r\n  },\r\n  {\r\n    value: 10,\r\n    label: '10',\r\n  },\r\n  {\r\n    value: 11,\r\n    label: '11',\r\n  },\r\n  {\r\n    value: 12,\r\n    label: '12',\r\n  },\r\n  {\r\n    value: 13,\r\n    label: '13',\r\n  },\r\n  {\r\n    value: 14,\r\n    label: '14',\r\n  },\r\n  {\r\n    value: 15,\r\n    label: '15',\r\n  },\r\n  {\r\n    value: 16,\r\n    label: '16',\r\n  },\r\n  {\r\n    value: 17,\r\n    label: '17',\r\n  },\r\n  {\r\n    value: 18,\r\n    label: '18',\r\n  },\r\n  {\r\n    value: 19,\r\n    label: '19',\r\n  },\r\n  {\r\n    value: 20,\r\n    label: '20',\r\n  }\r\n];","import { IconButton, Box } from '@mui/material'\r\nimport { useTheme } from '@mui/material/styles'\r\nimport FirstPageIcon from '@mui/icons-material/FirstPage'\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft'\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight'\r\nimport LastPageIcon from '@mui/icons-material/LastPage'\r\n\r\n\r\nexport default function TablePaginationActions({ count, page, rowsPerPage, onPageChange }) {\r\n    const theme = useTheme();\r\n\r\n    const handleFirstPageButtonClick = (event) => {\r\n        onPageChange(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event) => {\r\n        onPageChange(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event) => {\r\n        onPageChange(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event) => {\r\n        onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ flexShrink: 0, ml: 2.5 }}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleBackButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"previous page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n            </IconButton>\r\n        </Box>\r\n    );\r\n}","import React, { useState } from 'react'\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TableFooter, TablePagination } from '@mui/material'\r\nimport TablePaginationActions from './TablePaginationActions'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nconst ContentTable = ({ data, selectedSmsCount, selectedDedicatedNumberCount }) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <TableContainer component={Paper} className='table-content'>\r\n            <Table aria-label=\"simple table\">\r\n                <TableHead className='table-head'>\r\n                    <TableRow>\r\n                        <TableCell>Gateways</TableCell>\r\n                        <TableCell align='center'>Cost for {data.length} numbers</TableCell>\r\n                        <TableCell align='center'>Cost for {data.length} Messages</TableCell>\r\n                        <TableCell align='center'>Total Cost</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {data.length !== 0 ?\r\n                        (rowsPerPage > 0\r\n                            ? data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            : data\r\n                        ).map((row, index) => (\r\n                            <TableRow key={index}>\r\n                                <TableCell component=\"th\" scope=\"row\">{row.gateway}</TableCell>\r\n                                {\r\n                                    <TableCell align='center'>\r\n                                        {\r\n                                            row.costPerDedicatedNumber !== '' ?\r\n                                                `$ ${((row.costPerDedicatedNumber * selectedDedicatedNumberCount).toFixed(2)).toLocaleString()}`\r\n                                                :\r\n                                                'No dedicated numbers available'\r\n                                        }\r\n                                    </TableCell>\r\n                                }\r\n                                <TableCell align='center'>\r\n                                    {\r\n                                        `$ ${((row.costPerOutboundSMS * selectedSmsCount).toFixed(2)).toLocaleString()}`\r\n                                    }\r\n                                </TableCell>\r\n                                <TableCell align='center'>\r\n                                    {parseInt(row.total).toFixed(2).toLocaleString()}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )) :\r\n                        <TableRow><TableCell>Data not found!</TableCell></TableRow>\r\n                    }\r\n                </TableBody>\r\n                <TableFooter>\r\n                    <TableRow>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 25, 50, { label: 'All', value: -1 }]}\r\n                            colSpan={4}\r\n                            count={data.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            SelectProps={{\r\n                                inputProps: {\r\n                                    'aria-label': 'rows per page',\r\n                                },\r\n                                native: true,\r\n                            }}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                            ActionsComponent={TablePaginationActions}\r\n                        />\r\n                    </TableRow>\r\n                </TableFooter>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n\r\nexport default ContentTable","import React, { useState, useEffect } from 'react'\r\nimport { Grid, Container, Autocomplete, Typography, Slider, TextField, Box } from '@mui/material'\r\nimport { countries, gateways, marks } from '../data'\r\nimport ContentTable from './ContentTable'\r\nimport axios from 'axios'\r\nvar groupBy = require('json-groupby')\r\nconst _ = require('lodash')\r\n\r\n\r\nconst Content = () => {\r\n\r\n    const [data, setData] = useState(gateways)\r\n    const [selectedSmsCount, setSelectedSmsCount] = useState(100)\r\n    const [selectedDedicatedNumberCount, setSelectedDedicatedNumberCount] = useState(1)\r\n    const [country, setCountry] = useState('')\r\n\r\n    const handlePriceChange = () => {\r\n        let groupedData = groupBy(gateways, ['gateway'])\r\n        let groupedDataToArray = []\r\n\r\n        for (let index in groupedData) {\r\n            groupedDataToArray.push(groupedData[index])\r\n        }\r\n\r\n        const gatewayData = groupedDataToArray.flatMap(gatewayData => {\r\n            let biggestVolume = -1\r\n            let gatewayCostRecordToUse = []\r\n\r\n            for (const gatewayCostRecord of gatewayData) {\r\n                if (selectedSmsCount > gatewayCostRecord.volume && gatewayCostRecord.volume > biggestVolume) {\r\n                    gatewayCostRecordToUse = {\r\n                        ...gatewayCostRecord, total: (selectedSmsCount * gatewayCostRecord.costPerOutboundSMS\r\n                            + selectedDedicatedNumberCount * parseInt(gatewayCostRecord.costPerDedicatedNumber))\r\n                    }\r\n                    biggestVolume = gatewayCostRecord.volume\r\n                }\r\n            }\r\n            return gatewayCostRecordToUse\r\n        })\r\n\r\n        setData(_.orderBy(gatewayData.filter(item => item.country.includes(country.name)), ['total']))\r\n    }\r\n\r\n    // exe only at 1st mount\r\n    useEffect(() => {\r\n        axios.get('https://ipapi.co/json/').then((response) => {\r\n            setCountry({ name: response.data.country_name })\r\n        }).catch((error) => { setCountry('') });\r\n    }, [])\r\n\r\n    // other changes \r\n    useEffect(() => {\r\n        handlePriceChange();\r\n    }, [selectedDedicatedNumberCount, selectedSmsCount, country])\r\n\r\n\r\n    const handleCountryChange = (event, value) => {\r\n        value !== null ? setCountry({ name: value.name }) : setCountry('')\r\n    }\r\n\r\n    const handleNumberChange = (event, value) => {\r\n        setSelectedDedicatedNumberCount(value);\r\n    }\r\n\r\n    const handleSMSChange = (event, value) => {\r\n        setSelectedSmsCount(value)\r\n    }\r\n\r\n    return (\r\n        <Container className='content'>\r\n            <Grid container justifyContent='space-between' spacing={4}>\r\n                <Grid item xs={12} md={3}>\r\n                    <Autocomplete\r\n                        value={country}\r\n                        id=\"country-select-demo\"\r\n                        options={countries}\r\n                        autoHighlight\r\n                        onChange={handleCountryChange}\r\n                        getOptionLabel={(option) => option.name}\r\n                        renderOption={(props, option) => (\r\n                            <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                                <img\r\n                                    loading=\"lazy\"\r\n                                    width=\"20\"\r\n                                    src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`}\r\n                                    srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`}\r\n                                    alt=\"\"\r\n                                />\r\n                                {option.name} ({option.code})\r\n                            </Box>\r\n                        )}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                label=\"Choose a country\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <Typography>How many numbers do you need?</Typography>\r\n                    <Slider getAriaValueText={(value) => value} marks={marks} step={1} min={1} max={20} value={selectedDedicatedNumberCount} aria-label=\"Default\" onChange={handleNumberChange} valueLabelDisplay=\"auto\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <Typography>How many messages will you send per month?</Typography>\r\n                    <Slider min={100} max={11000} value={selectedSmsCount} aria-label=\"Default\" onChange={handleSMSChange} valueLabelDisplay=\"auto\" />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography variant='h6' gutterBottom>Available Gateways</Typography>\r\n                    <Typography variant='body2'>The following gateways are available in your country:</Typography>\r\n                    <ContentTable data={data} selectedSmsCount={selectedSmsCount} selectedDedicatedNumberCount={selectedDedicatedNumberCount} />\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Content","import React from \"react\"\nimport Header from \"./components/Header\"\nimport Content from \"./components/Content\"\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Header/>\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}